version: '2'

volumes:
    jenkins_data:
        external: true
        name: jenkins-ciflow

services:
    jenkins_casc:                   # derived Jenkins image using Configuration as code plugin for configuring from scratch
        build: .
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - jenkins_data:/var/jenkins_home
        ports:
            - "8080:8080"
            - "50001:50000"
        secrets:
            - jenkins_admin_pw
            - ci2runner_ssh_key
            - ci2runner_ssh_passphrase
        
            
# Docker secrets - here we use file secrets, the path is the file on the host containing the secret value 
# Service (jenkins) then use defined secrets.
# In the container secrets are presented as files: /run/secrets/<secret_id>

secrets: #Be careful with newlines in your secrets, make sure to remove them before running docker-compose up.
    #github:
    #  file: /var/deploy/secrets/github
    jenkins_admin_pw:
        file: ${SECRETS_PATH}/jenkins_admin_pw
    ci2runner_ssh_key: #This should point to the private key you want your jenkins master to use when connecting to slaves.  So in AWS for example this would be your .pem file
        file: ${SECRETS_PATH}/ci2runner_ssh_key           
            # Can use .env file for host dependent data
    ci2runner_ssh_passphrase:
        file: ${SECRETS_PATH}/ci2runner_ssh_passphrase
